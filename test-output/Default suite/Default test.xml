<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Sushmita" ignored="0" name="Default test" tests="3" failures="0" timestamp="09 Jan 2019 10:20:06 GMT" time="0.216" errors="0">
  <testcase name="@BeforeClass startReport" time="0.11" classname="TestNG.DemoTestNG">
    <failure type="java.lang.NoClassDefFoundError" message="freemarker/ext/beans/BeansWrapperBuilder">
      <![CDATA[java.lang.NoClassDefFoundError: freemarker/ext/beans/BeansWrapperBuilder
at com.relevantcodes.extentreports.HTMLReporter.start(HTMLReporter.java:76)
at com.relevantcodes.extentreports.Report.attach(Report.java:318)
at com.relevantcodes.extentreports.ExtentReports.<init>(ExtentReports.java:86)
at com.relevantcodes.extentreports.ExtentReports.<init>(ExtentReports.java:375)
at TestNG.DemoTestNG.startReport(DemoTestNG.java:28)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.ClassNotFoundException: freemarker.ext.beans.BeansWrapperBuilder
at java.net.URLClassLoader.findClass(Unknown Source)
at java.lang.ClassLoader.loadClass(Unknown Source)
at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
at java.lang.ClassLoader.loadClass(Unknown Source)
... 31 more
]]>
    </failure>
  </testcase> <!-- @BeforeClass startReport -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="TestNG.DemoTestNG">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="TestNG.DemoTestNG">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="TestNG.DemoTestNG">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="TestNG.DemoTestNG">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="TestNG.DemoTestNG">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="TestNG.DemoTestNG">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterClass AfterClass" time="0.0" classname="TestNG.DemoTestNG">
    <skipped/>
  </testcase> <!-- @AfterClass AfterClass -->
  <testcase name="@AfterTest AfterTest" time="0.0" classname="TestNG.DemoTestNG">
    <skipped/>
  </testcase> <!-- @AfterTest AfterTest -->
  <testcase name="Test1" time="0.0" classname="TestNG.DemoTestNG">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test2" time="0.0" classname="TestNG.DemoTestNG">
    <skipped/>
  </testcase> <!-- Test2 -->
  <testcase name="Test3" time="0.0" classname="TestNG.DemoTestNG">
    <skipped/>
  </testcase> <!-- Test3 -->
</testsuite> <!-- Default test -->
